public class HomeWork {
    public static void main(String[] args) {
    /*Задание 1.
            Создать программу, выводящую на экран ближайшее к 10 из двух чисел, записанных в переменные m и n.
            Например, среди 8,5 и 11,45 ближайшее к десяти 11,45
            */
        //nearestNumber(10, 10.05);

    /* Задание 2
            В три переменные a,b и c записаны три вещественных числа. Создать программу, которая будет находить и
            выводить на экран вещественные корни квадратного уравнения ax^2+bx+c=0, либо сообщать что корней нет.
            */
        //quadEquation(1, 12, 36);

    /* Задание 3
            Создать программу, выводящую на экран наибоьшую цифру любого трехзначного натурального числа.
            */
        //maxNum(424);

    /* Задание 4
            В три переменные a, b  и с явно записаны програмистом три целых попарно неравных между собой числа.
            Создать программу, которая переставит числа в переменных таким образо, чтобы при выводе на экран
            последовательность a, b  и с оказалась строго возрастающей.
            */
        //sort(9,62,-101);

        //-------------------------------Циклы--------------------------------------------

    /* Задание 5-------------------------------
            Создайте программу, выводящую на экран все четырехзначные числа последовательности 1000 1003 1006 ...
            */
        //task5();

    /* Задание 6-------------------------------
            Создайте программу, выводящую на экран все неотрицательные элементы последовательности 90 85 80 75 70
            */
        //task6();

    /* Задание 7-------------------------------
            Создайте программу, выводящую на экран первые 20 элементов последовательности 2 4 8 16 32 64
            */
        //task7();

    /* Задание 8-------------------------------
            Проверьте. является ли натуральное число - простым
            */
        //task8(13);

    /* Задание 9-------------------------------
            Выведите на экран первые 11 членов последовательности Фибоначчи. Первый и второй члены
            последовательности равны единицам
            */
        //numFib();

        /* Задание 10-------------------------------
             В городе N проезд в трамвае осуществляется по бумажным отрывным билетам. Каждую неделю трамвайное депо
             заказывает в местной типографии рулон билетов с номерами от 000001 до 999999. «Счастливым» считается
             билетик у которого сумма первых трёх цифр номера равна сумме последних трёх цифр, как, например, в билетах
             с номерами 003102 или 567576. Трамвайное депо решило подарить сувенир обладателю каждого счастливого
             билета и теперь раздумывает, как много сувениров потребуется. С помощью программы подсчитайте сколько
             счастливых билетов в одном рулоне?
            */
        //task10();

        /* Задание 11-------------------------------
             Электронные часы показывают время в формате от 00:00 до 23:59. Подсчитать сколько раз за сутки случается
             так, что слева от двоеточия показывается симметричная комбинация для той, что справа от двоеточия
             (например, 02:20, 11:11 или 15:51)
            */
        task11();
    }


    //-----------------------Задание 1----------------------------------------
    public static void nearestNumber(double m, double n) {
        if (Math.abs(10 - m) > Math.abs(10 - n))
            System.out.println("Ближайшее к 10" + n);
        else if (Math.abs(10 - m) < Math.abs(10 - n))
            System.out.println("Ближайшее к 10" + m);
        else
            System.out.println("m и n равны");
    }


    // ----------------------Задание 2-----------------------------------------
    public static void quadEquation(double a, double b, double c) {
        if ((b * b - 4 * a * c) < 0)
            System.out.println("Корней нет");
        else if ((b * b - 4 * a * c) == 0)
            System.out.println("Корень уравнения равен = " + (-b + Math.sqrt(b * b - 4 * a * c)) / 2 * a);
        else {
            System.out.println("Первый корень уравнения равен = " + (-b + Math.sqrt(b * b - 4 * a * c)) / (2 * a));
            System.out.println("Второй корень уравнения равен = " + (-b - Math.sqrt(b * b - 4 * a * c)) / (2 * a));
        }
    }


    // ----------------------Задание 3-----------------------------------------
    public static void maxNum(int i) {
    /*
    int z = (i / 100) > (i % 100 / 10) ? (i / 100) : (i % 100 / 10);
    int x = z > (i % 100 % 10) ? z : (i % 100 % 10);
    System.out.println(x);
    */
        System.out.println("Наибольшая цифра из трехзначного натурального цисла " + i + "  = " +
                ((i / 100 > i % 100 / 10 ? i / 100 : i % 100 / 10) > i % 100 % 10 ?
                        (i / 100 > i % 100 / 10 ? i / 100 : i % 100 / 10) : i % 100 % 10));
    }

    // ----------------------Задание 4-----------------------------------------
    public static void sort(int a, int b, int c) {
        if (a < b && a < c) {
            if (b < c)
                System.out.println(a + "," + b + "," + c);
            else
                System.out.println(a + "," + c + "," + b);
        } else if (b < a && b < c) {
            if (a < c)
                System.out.println(b + "," + a + "," + c);
            else
                System.out.println(b + "," + c + "," + a);
        } else {
            if (a < b)
                System.out.println(c + "," + a + "," + b);
            else
                System.out.println(c + "," + b + "," + a);
        }
    }

    // ----------------------Задание 5-----------------------------------------
    public static void task5() {
        int i = 1000;
        while (i < 10000) {
            System.out.println(i);
            i += 3;
        }
    }

    // ----------------------Задание 6-----------------------------------------
    public static void task6() {
        int i = 90;
        while (i >= 0) {
            System.out.println(i);
            i -= 5;
        }
    }

    // ----------------------Задание 7-----------------------------------------
    public static void task7() {
        int a = 2;
        for (int i = 0; i < 20; i++) {
            System.out.println(a);
            a *= 2;
        }
    }

    // ----------------------Задание 8-----------------------------------------
    public static void task8(int n) {
        boolean primeNum = true;
        for (int i = 2; i < n; i++) {
            if (n % i == 0) {
                primeNum = false;
                break;
            }
        }
        if (primeNum == true)
            System.out.println(n + " - простое число");
        else
            System.out.println(n + " - составное число");
    }

    // ----------------------Задание 9-----------------------------------------
    public static void numFib(){
        int num0 = 1;
        int num1 = 1;
        int num2;
        System.out.print(num0 + " " + num1);
        for(int i = 3; i <= 11; i++){
            num2 = num0 + num1;
            System.out.print(" " + num2);
            num0 = num1;
            num1 = num2;
        }
    }

    // ----------------------Задание 10-----------------------------------------
    public static void task10(){
        int sum1;
        int sum2;
        int count = 0;
        for(int i = 000001; i <= 999999; i++){
            sum1 = i % 10 + i % 100 / 10 + i % 1000 / 100;
            sum2 = i % 10000 / 1000 + i % 100000 / 10000 + i / 100000;
            if(sum1 == sum2)
                count+=1;
        }
        System.out.println("Количество счастливых билетов равно " + count);
    }

    // ----------------------Задание 11-----------------------------------------
    public static void task11(){
        int count = 0;
        int n1, n2, n3, n4;
        for(int i = 00; i<=23; i++){
            n1 = i / 10;
            n2 = i % 10;
            for(int j = 0; j <= 59; j++){
                n3 = j / 10;
                n4 = j % 10;
                if(n1 == n4 && n2 == n3){
                    count+=1;
                }
            }
        }
        System.out.println(count);
    }
}
